AWSTemplateFormatVersion: '2010-09-09'
Description: 'CloudFormation template for ALR Subscription Microservice Terraform Infrastructure Pipeline'

Parameters:
  ProjectName:
    Type: String
    Default: alr-subscription-microservice
    Description: Project name used for resource naming
  
  Environment:
    Type: String
    Default: usdev-usw2
    AllowedValues:
      # US West 2 (Oregon)
      - usdev-usw2
      - usqa-usw2
      - usstg-usw2
      - usprod-usw2
      - usbeta-usw2
      # US East 1 (N. Virginia)
      - usdev-use1
      - usqa-use1
      - usstg-use1
      - usprod-use1
      - usbeta-use1
      # US East 2 (Ohio)
      - usdev-use2
      - usqa-use2
      - usstg-use2
      - usprod-use2
      - usbeta-use2
      # EU West 1 (Ireland)
      - eudev-euw1
      - euqa-euw1
      - eustg-euw1
      - euprod-euw1
      - eubeta-euw1
    Description: Environment name with region
  
  TerraformRepositoryName:
    Type: String
    Default: microservices-dev-vlt-infra
    Description: GitHub repository name for Terraform code
  
  TerraformRepositoryOwner:
    Type: String
    Default: ankitkanojia786
    Description: GitHub repository owner for Terraform code
  
  TerraformBranchName:
    Type: String
    Default: main
    Description: Branch name for Terraform code

Resources:
  # S3 bucket for Terraform artifacts
  TerraformArtifactBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub '${Environment}-alr-subscription-microservice-tf-artifacts'
      VersioningConfiguration:
        Status: Enabled
      Tags:
        - Key: ohi:project
          Value: alr
        - Key: ohi:application
          Value: alr-mobile
        - Key: ohi:module
          Value: alr-subscription
        - Key: ohi:environment
          Value: !Ref Environment
        - Key: ohi:stack-name
          Value: !Sub '${Environment}-alr-subscription-microservice-tf-init-pipeline'

  # IAM role for CodePipeline
  CodePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${Environment}-alr-subscription-microservice-pipeline-role'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
        - arn:aws:iam::aws:policy/AWSCodeBuildAdminAccess
      Tags:
        - Key: ohi:project
          Value: alr
        - Key: ohi:application
          Value: alr-mobile
        - Key: ohi:module
          Value: alr-subscription
        - Key: ohi:environment
          Value: !Ref Environment
        - Key: ohi:stack-name
          Value: !Sub '${Environment}-alr-subscription-microservice-tf-init-pipeline'

  # IAM role for CodeBuild
  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${Environment}-alr-subscription-microservice-build-role'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
        - arn:aws:iam::aws:policy/AmazonVPCFullAccess
        - arn:aws:iam::aws:policy/IAMFullAccess
        - arn:aws:iam::aws:policy/CloudWatchLogsFullAccess
      Policies:
        - PolicyName: ComprehensiveAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'ecs:*'
                  - 'ecr:*'
                  - 'apigateway:*'
                  - 'logs:*'
                  - 'cloudwatch:*'
                  - 'ssm:*'
                  - 'kms:*'
                  - 'elasticloadbalancing:*'
                  - 'route53:*'
                  - 'acm:*'
                  - 'cloudfront:*'
                  - 'lambda:*'
                  - 'events:*'
                  - 'sns:*'
                  - 'sqs:*'
                  - 'dynamodb:*'
                  - 'secretsmanager:*'
                  - 'codebuild:*'
                  - 'codepipeline:*'
                  - 'codestar-connections:*'
                  - 'codecommit:*'
                  - 'codedeploy:*'
                  - 'states:*'
                  - 'ec2:*'
                Resource: '*'
      Tags:
        - Key: ohi:project
          Value: alr
        - Key: ohi:application
          Value: alr-mobile
        - Key: ohi:module
          Value: alr-subscription
        - Key: ohi:environment
          Value: !Ref Environment
        - Key: ohi:stack-name
          Value: !Sub '${Environment}-alr-subscription-microservice-tf-init-pipeline'

  # CodeBuild project for Terraform
  TerraformCodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub '${Environment}-alr-subscription-microservice-tf-build'
      Description: 'CodeBuild project for ALR Subscription Microservice Terraform infrastructure'
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
        PrivilegedMode: true
        EnvironmentVariables:
          - Name: TF_IN_AUTOMATION
            Value: 'true'
          - Name: ENVIRONMENT
            Value: !Ref Environment
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec-terraform.yml
      Tags:
        - Key: ohi:project
          Value: alr
        - Key: ohi:application
          Value: alr-mobile
        - Key: ohi:module
          Value: alr-subscription
        - Key: ohi:environment
          Value: !Ref Environment
        - Key: ohi:stack-name
          Value: !Sub '${Environment}-alr-subscription-microservice-tf-init-pipeline'

  # GitHub connection for CodeStar
  GitHubConnection:
    Type: AWS::CodeStarConnections::Connection
    Properties:
      ConnectionName: !Sub '${Environment}-alr-github-connection'
      ProviderType: GitHub
      Tags:
        - Key: ohi:project
          Value: alr
        - Key: ohi:application
          Value: alr-mobile
        - Key: ohi:module
          Value: alr-subscription
        - Key: ohi:environment
          Value: !Ref Environment
        - Key: ohi:stack-name
          Value: !Sub '${Environment}-alr-subscription-microservice-tf-init-pipeline'

  # CodePipeline for Terraform
  TerraformPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Sub '${Environment}-alr-subscription-microservice-pipeline'
      RoleArn: !GetAtt CodePipelineServiceRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref TerraformArtifactBucket
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeStarSourceConnection
                Version: '1'
              Configuration:
                ConnectionArn: !Ref GitHubConnection
                FullRepositoryId: !Sub '${TerraformRepositoryOwner}/${TerraformRepositoryName}'
                BranchName: !Ref TerraformBranchName
              OutputArtifacts:
                - Name: SourceCode
        - Name: Plan
          Actions:
            - Name: TerraformPlan
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              Configuration:
                ProjectName: !Ref TerraformCodeBuildProject
                EnvironmentVariables: !Sub '[{"name":"TF_COMMAND","value":"plan","type":"PLAINTEXT"}]'
              InputArtifacts:
                - Name: SourceCode
              OutputArtifacts:
                - Name: TerraformPlan
        - Name: Approve
          Actions:
            - Name: Approval
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Provider: Manual
                Version: '1'
        - Name: Apply
          Actions:
            - Name: TerraformApply
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              Configuration:
                ProjectName: !Ref TerraformCodeBuildProject
                EnvironmentVariables: !Sub '[{"name":"TF_COMMAND","value":"apply","type":"PLAINTEXT"}]'
              InputArtifacts:
                - Name: SourceCode
      Tags:
        - Key: ohi:project
          Value: alr
        - Key: ohi:application
          Value: alr-mobile
        - Key: ohi:module
          Value: alr-subscription
        - Key: ohi:environment
          Value: !Ref Environment
        - Key: ohi:stack-name
          Value: !Sub '${Environment}-alr-subscription-microservice-tf-init-pipeline'

Outputs:
  TerraformPipelineName:
    Description: Name of the Terraform pipeline
    Value: !Ref TerraformPipeline
  
  TerraformArtifactBucketName:
    Description: Name of the S3 bucket for Terraform artifacts
    Value: !Ref TerraformArtifactBucket
  
  GitHubConnectionArn:
    Description: ARN of the GitHub connection
    Value: !Ref GitHubConnection